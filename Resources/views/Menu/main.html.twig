{% extends 'knp_menu.html.twig' %}

{% macro attributes(attributes) %}
    {% for name, value in attributes %}
        {%- if value is not none and value is not sameas(false) and name != 'icon' -%}
            {{- ' %s="%s"'|format(name, value is sameas(true) ? name|e : value|e)|raw -}}
        {%- endif -%}
    {%- endfor -%}
{% endmacro %}


{% block nekland_base_admin_list %}
    {% if item.hasChildren and options.depth is not sameas(0) and item.displayChildren %}
        {% import _self as knp_menu %}
        {% set currentItem = item %}
        {% for item in currentItem.children %}
            {{ block('item') }}
        {% endfor %}
        {# restore current variables #}
        {% set item = currentItem %}
        {% set options = currentOptions %}
    {% endif %}
{% endblock %}

{% block item %}
    {% if item.displayed %}
        {# building the class of the item #}
        {%- set classes = item.attribute('class') is not empty ? [item.attribute('class')] : [] %}
        {%- if matcher.isCurrent(item) %}
            {%- set classes = classes|merge([options.currentClass]) %}
        {%- elseif matcher.isAncestor(item, options.depth) %}
            {%- set classes = classes|merge([options.ancestorClass]) %}
        {%- endif %}
        {%- if item.actsLikeFirst %}
            {%- set classes = classes|merge([options.firstClass]) %}
        {%- endif %}
        {%- if item.actsLikeLast %}
            {%- set classes = classes|merge([options.lastClass]) %}
        {%- endif %}
        {%- set attributes = item.attributes %}
        {%- if classes is not empty %}
            {%- set attributes = attributes|merge({'class': classes|join(' ')}) %}
        {%- endif %}
        {%- if item.hasChildren %}
            {%- set classes = classes|merge(['nav-header']) %}
        {%- endif %}
        {%- if item.attribute('icon') is not empty %}
            {%- set icon = '<i class="icon ' ~ item.attribute('icon') ~ '"></i>' %}
        {%- else %}
            {%- set icon = '' %}
        {%- endif %}
        {# displaying the item #}
        {% import _self as knp_menu %}
        <li{{ knp_menu.attributes(attributes) }}>
            {%- if item.uri is not empty and (not matcher.isCurrent(item) or options.currentAsLink) %}
                {{ block('linkElement') }}
            {%- else %}
                {{ block('spanElement') }}
            {%- endif %}
            {# render the list of children#}
            {%- set childrenClasses = item.childrenAttribute('class') is not empty ? [item.childrenAttribute('class')] : [] %}
            {%- set childrenClasses = childrenClasses|merge(['menu_level_' ~ item.level]) %}
            {%- set listAttributes = item.childrenAttributes|merge({'class': childrenClasses|join(' ') }) %}

        </li>
        {{ block('nekland_base_admin_list') }}
    {% endif %}
{% endblock %}

{% block list %}
    {% if item.hasChildren and options.depth is not sameas(0) and item.displayChildren %}
        {% import _self as knp_menu %}
        <ul{{ knp_menu.attributes(listAttributes) }} class="nav nav-list">
            {{ block('children') }}
        </ul>
    {% endif %}
{% endblock %}

{% block label %}{{ icon |raw }}{% if options.allow_safe_labels and item.getExtra('safe_label', false) %}{{ item.label|raw }}{% else %}{{ item.label }}{% endif %}{% endblock %}
